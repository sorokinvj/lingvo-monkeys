'use client';

import { useEffect, useState } from 'react';
import Link from 'next/link';
import { useQuery } from '@tanstack/react-query';
import { useRouter } from 'next/navigation';
import { createClientComponentClient } from '@supabase/auth-helpers-nextjs';
import {
  fetchUserAuditData,
  fetchUserAuditDataServer,
  getEventDescription,
  UserAuditData,
  Event,
} from '../helpers';
import { useUser } from '@/hooks/useUser';

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–∫–æ–Ω–∫–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Å–æ–±—ã—Ç–∏–π
const EventIcons = {
  file_upload: 'üì§',
  file_listening: 'üéß',
  player_interaction: '‚ñ∂Ô∏è',
  settings_change: '‚öôÔ∏è',
  page_view: 'üëÅÔ∏è',
};

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏
const formatEventTime = (date: string): string => {
  const eventDate = new Date(date);
  return eventDate.toLocaleString('ru-RU', {
    day: '2-digit',
    month: '2-digit',
    year: 'numeric',
    hour: '2-digit',
    minute: '2-digit',
  });
};

// –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ —Å–æ–±—ã—Ç–∏–π –ø–æ –¥–Ω—è–º
const groupEventsByDay = (events: Event[]) => {
  const grouped: Record<string, Event[]> = {};

  events.forEach((event) => {
    const date = new Date(event.createdAt);
    const dateKey = date.toLocaleDateString('ru-RU');

    if (!grouped[dateKey]) {
      grouped[dateKey] = [];
    }

    grouped[dateKey].push(event);
  });

  // –°–æ—Ä—Ç–∏—Ä—É–µ–º –¥–Ω–∏ –ø–æ —É–±—ã–≤–∞–Ω–∏—é (—Å–Ω–∞—á–∞–ª–∞ –Ω–æ–≤—ã–µ)
  return Object.entries(grouped).sort(([dateA], [dateB]) => {
    return new Date(dateB).getTime() - new Date(dateA).getTime();
  });
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–æ–±—ã—Ç–∏–∏
const EventDetails = ({ event }: { event: Event }) => {
  const [isOpen, setIsOpen] = useState(false);

  const toggleDetails = () => setIsOpen(!isOpen);

  const filteredDetails = Object.fromEntries(
    Object.entries(event).filter(
      ([key]) =>
        !['id', 'userId', 'eventType', 'createdAt', 'fileName'].includes(key)
    )
  );

  return (
    <div className="mt-1">
      <button
        onClick={toggleDetails}
        className="text-sm text-blue-600 hover:text-blue-800 focus:outline-none"
      >
        {isOpen ? '–°–∫—Ä—ã—Ç—å –¥–µ—Ç–∞–ª–∏' : '–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏'}
      </button>

      {isOpen && (
        <pre className="mt-2 p-3 bg-gray-100 rounded text-xs overflow-x-auto">
          {JSON.stringify(filteredDetails, null, 2)}
        </pre>
      )}
    </div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å–æ–±—ã—Ç–∏—è
const EventItem = ({
  event,
  fileNames,
}: {
  event: Event;
  fileNames: Record<string, string>;
}) => {
  const icon = EventIcons[event.eventType as keyof typeof EventIcons] || 'üìã';
  const time = new Date(event.createdAt).toLocaleTimeString('ru-RU', {
    hour: '2-digit',
    minute: '2-digit',
    second: '2-digit',
  });

  return (
    <div className="mb-4 bg-white p-4 rounded-lg shadow-sm">
      <div className="flex items-start">
        <div className="w-8 h-8 flex items-center justify-center text-xl mr-3">
          {icon}
        </div>
        <div className="flex-1">
          <div className="flex justify-between">
            <span className="text-gray-500 text-sm">{time}</span>
          </div>
          <p className="font-medium mt-1">
            {getEventDescription(event, fileNames)}
          </p>
          <EventDetails event={event} />
        </div>
      </div>
    </div>
  );
};

export default function UserAuditPage({ email }: { email: string }) {
  const { data: currentUser } = useUser();
  const {
    data: auditData,
    error,
    isLoading,
  } = useQuery<UserAuditData>({
    queryKey: ['userAudit', email],
    queryFn: () => fetchUserAuditDataServer(email, currentUser?.email),
  });

  // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è
  if (isLoading) {
    return (
      <div className="p-4">
        <Link
          href="/admin"
          className="flex items-center text-blue-600 hover:text-blue-800 mb-6"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            className="h-5 w-5 mr-1"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth={2}
              d="M15 19l-7-7 7-7"
            />
          </svg>
          –ù–∞–∑–∞–¥ –∫ –∞–¥–º–∏–Ω–∫–µ
        </Link>
        <h2 className="text-xl font-semibold">–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∞—É–¥–∏—Ç–∞...</h2>
      </div>
    );
  }

  // –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞
  if (error || !auditData) {
    return (
      <div className="p-4">
        <Link
          href="/admin"
          className="flex items-center text-blue-600 hover:text-blue-800 mb-6"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            className="h-5 w-5 mr-1"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth={2}
              d="M15 19l-7-7 7-7"
            />
          </svg>
          –ù–∞–∑–∞–¥ –∫ –∞–¥–º–∏–Ω–∫–µ
        </Link>
        <h1 className="text-2xl font-bold mb-4">
          –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –∞—É–¥–∏—Ç–∞
        </h1>
        <p className="text-red-500">
          {error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}
        </p>
      </div>
    );
  }

  // –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ —Å–æ–±—ã—Ç–∏—è –≤ –æ–¥–∏–Ω –º–∞—Å—Å–∏–≤ –∏ —Å–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –≤—Ä–µ–º–µ–Ω–∏
  const allEvents = [
    ...auditData.events.uploadEvents,
    ...auditData.events.listeningEvents,
    ...auditData.events.playerEvents,
    ...auditData.events.settingsEvents,
    ...auditData.events.pageViewEvents,
  ].sort((a, b) => {
    return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime();
  });

  // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏—è –ø–æ –¥–Ω—è–º
  const eventsByDay = groupEventsByDay(allEvents);

  // –°–≤–æ–¥–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  const totalFiles = auditData.files.length;
  const totalPageViews = auditData.events.pageViewEvents.length;
  const totalUploads = auditData.events.uploadEvents.length;
  const totalPlayerInteractions = auditData.events.playerEvents.length;

  return (
    <div className="p-4 max-w-4xl mx-auto">
      <div className="flex items-center mb-6">
        <Link
          href="/admin"
          className="flex items-center text-blue-600 hover:text-blue-800 mr-4"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            className="h-5 w-5 mr-1"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth={2}
              d="M15 19l-7-7 7-7"
            />
          </svg>
          –ù–∞–∑–∞–¥ –∫ –∞–¥–º–∏–Ω–∫–µ
        </Link>
        <h1 className="text-2xl font-bold">–ê—É–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {email}</h1>
      </div>

      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div className="bg-white rounded-lg shadow p-4 mb-6">
        <h2 className="text-lg font-semibold mb-3">–°–≤–æ–¥–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h2>
        <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
          <div className="bg-blue-50 p-3 rounded-lg">
            <div className="text-3xl font-bold text-blue-600">{totalFiles}</div>
            <div className="text-sm text-gray-600">–§–∞–π–ª–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω–æ</div>
          </div>
          <div className="bg-green-50 p-3 rounded-lg">
            <div className="text-3xl font-bold text-green-600">
              {totalUploads}
            </div>
            <div className="text-sm text-gray-600">–ó–∞–≥—Ä—É–∑–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ</div>
          </div>
          <div className="bg-purple-50 p-3 rounded-lg">
            <div className="text-3xl font-bold text-purple-600">
              {totalPlayerInteractions}
            </div>
            <div className="text-sm text-gray-600">
              –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π —Å –ø–ª–µ–µ—Ä–æ–º
            </div>
          </div>
          <div className="bg-gray-50 p-3 rounded-lg">
            <div className="text-3xl font-bold text-gray-600">
              {totalPageViews}
            </div>
            <div className="text-sm text-gray-600">–ü–æ—Å–µ—â–µ–Ω–∏–π —Å—Ç—Ä–∞–Ω–∏—Ü</div>
          </div>
        </div>
      </div>

      {/* –§–∞–π–ª—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
      <div className="bg-white rounded-lg shadow p-4 mb-6">
        <h2 className="text-xl font-semibold mb-2">–§–∞–π–ª—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</h2>
        {auditData.files.length > 0 ? (
          <ul className="space-y-2">
            {auditData.files.map((file) => (
              <li key={file.id} className="flex items-center">
                <span className="mr-2">üìÑ</span>
                <span>{file.name}</span>
              </li>
            ))}
          </ul>
        ) : (
          <p className="text-gray-500">–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç —Ñ–∞–π–ª–æ–≤</p>
        )}
      </div>

      {/* –•—Ä–æ–Ω–æ–ª–æ–≥–∏—è –¥–µ–π—Å—Ç–≤–∏–π */}
      <h2 className="text-xl font-semibold mb-4">–•—Ä–æ–Ω–æ–ª–æ–≥–∏—è –¥–µ–π—Å—Ç–≤–∏–π</h2>
      <div className="space-y-6">
        {eventsByDay.map(([day, events]) => (
          <div key={day} className="mb-6">
            <h3 className="text-lg font-medium text-gray-700 mb-3 sticky top-0 bg-gray-100 p-2 rounded-md">
              {day}
            </h3>
            <div className="space-y-0">
              {events.map((event) => (
                <EventItem
                  key={event.id}
                  event={event}
                  fileNames={auditData.fileNames}
                />
              ))}
            </div>
          </div>
        ))}
      </div>
    </div>
  );
}
